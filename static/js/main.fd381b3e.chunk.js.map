{"version":3,"sources":["Components/ux/TextFields.js","Components/ux/Slider.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","margin","spacing","textField","flexBasis","TextFieldComponent","props","classes","adornmentEnum","Object","freeze","errorEnum","Fragment","className","clsx","width","TextField","id","type","variant","label","value","onChange","event","getValue","target","Number","disabled","helperText","isValid","InputProps","startAdornment","InputAdornment","position","slider","SliderComponent","Slider","newValue","aria-labelledby","min","max","paper","padding","textAlign","color","palette","text","secondary","display","list","paddingRight","listPadding","paddingLeft","App","React","useState","interestRate","setInterest","numofPayments","setNumber","monthlyInstallment","setInstallment","amount","setAmount","months","setMonth","setValidity","isLoading","setLoading","left","state","setState","localStorage","length","index","setIndex","debounceOnChange","useCallback","func","wait","timeout","args","context","this","clearTimeout","setTimeout","apply","debounce","getData","i","getAmount","checkValidMonthAndAmount","checkValid","getMonths","principle","duration","a","fetch","json","then","data","setItem","JSON","stringify","monthlyPayment","numPayments","finally","side","toggleDrawer","open","key","handleHistoryClicked","parse","getItem","currentTarget","getAttribute","Grid","container","direction","alignItems","justify","style","minHeight","Button","onClick","Drawer","onClose","onKeyDown","List","ListSubheader","component","ListItem","ListItemText","primary","Divider","keys","sort","b","map","button","item","xs","Paper","LinearProgress","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fd381b3e.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    textField: {\r\n        flexBasis: 200,\r\n    },\r\n}));\r\n\r\nexport default function TextFieldComponent(props) {\r\n    const classes = useStyles();\r\n    const handleInputChange = event => {\r\n        props.getValue(event.target.value === '' ? '' : Number(event.target.value));\r\n    };\r\n\r\n    const adornmentEnum = { \"amount\": '$', \"month\": 'M', \"interest\": 'â„›', \"monthly_payment\": '$', \"payments\": \" \" };\r\n    Object.freeze(adornmentEnum);\r\n    const errorEnum = { \"amount\": 'Range: 500-5000', \"month\": 'Range: 6-24' };\r\n    Object.freeze(errorEnum);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={clsx(classes.width)}>\r\n                <TextField\r\n                    id={`filled-adornment-${props.type}`}\r\n                    type=\"number\"\r\n                    className={clsx(classes.margin, classes.textField)}\r\n                    variant=\"filled\"\r\n                    label={props.label}\r\n                    value={props.value}\r\n                    onChange={handleInputChange}\r\n                    disabled={props.disabled}\r\n                    helperText={props.isValid ? <span/> : errorEnum[props.type]}\r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">{adornmentEnum[props.type]}</InputAdornment>,\r\n                    }}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nTextFieldComponent.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n    disabled: PropTypes.bool,\r\n    isValid: PropTypes.bool,\r\n    getValue: PropTypes.func,\r\n    type: PropTypes.string.isRequired\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { Slider } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    slider: {\r\n        flexBasis: 200,\r\n    },\r\n}));\r\n\r\nexport default function SliderComponent(props) {\r\n    const classes = useStyles();\r\n\r\n    const handleSliderChange = (event, newValue) => {\r\n        props.getValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={clsx(classes.width)}>\r\n                <Slider\r\n                    className={clsx(classes.margin, classes.slider)}\r\n                    value={typeof props.value === 'number' ? props.value : 0}\r\n                    onChange={handleSliderChange}\r\n                    aria-labelledby=\"input-slider\"\r\n                    min={props.min}\r\n                    max={props.max}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nSliderComponent.propTypes = {\r\n    max: PropTypes.number.isRequired,\r\n    min: PropTypes.number.isRequired,\r\n    getValue: PropTypes.func.isRequired,\r\n    value: PropTypes.number.isRequired\r\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from './Components/ux/TextFields';\nimport Slider from './Components/ux/Slider';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    display: 'flex'\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  list: {\n    width: 250,\n  },\n  width: {\n    width: 'fit-content',\n    paddingRight: '30px'\n  },\n  listPadding: {\n    paddingLeft: '40px'\n  }\n}));\n\nfunction App() {\n\n  const classes = useStyles();\n  const [interestRate, setInterest] = React.useState(0);\n  const [numofPayments, setNumber] = React.useState(0);\n  const [monthlyInstallment, setInstallment] = React.useState(0);\n  const [amount, setAmount] = React.useState(0);\n  const [months, setMonth] = React.useState(0);\n  const [isValid, setValidity] = React.useState(true);\n  const [isLoading, setLoading] = React.useState(false);\n  const [state, setState] = React.useState({\n    left: false,\n  });\n  const [index, setIndex] = React.useState(localStorage.length);\n  const debounceOnChange = React.useCallback(debounce(getData, 400), []);\n\n  let data;\n  let i = index;\n\n  function debounce(func, wait) {\n    let timeout;\n    return function (...args) {\n      const context = this;\n      if (timeout) clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        timeout = null;\n        func.apply(context, args);\n      }, wait);\n    };\n  }\n\n  const getAmount = value => {\n    setAmount(value);\n    if (checkValidMonthAndAmount(value, months)) {\n      debounceOnChange(value, months);\n    }\n    checkValid('amount', value);\n  }\n\n  const getMonths = value => {\n    setMonth(value);\n    checkValid('month', value);\n    if (checkValidMonthAndAmount(amount, value)) {\n      debounceOnChange(amount, value);\n    }\n  }\n\n  const checkValidMonthAndAmount = (amount, months) => {\n    if ((amount >= 500 && amount <= 5000) && (months >= 6 && months <= 24)) {\n      return true;\n    }\n    return false;\n  }\n  async function getData(principle, duration) {\n    setLoading(true);\n    data = await fetch(`https://ftl-frontend-test.herokuapp.com/interest?amount=${principle}&numMonths=${duration}`);\n    data.json()\n      .then(data => {\n        localStorage.setItem(`${i}`, JSON.stringify({ amount: principle, months: duration }));\n        setInterest(data.interestRate);\n        setInstallment(data.monthlyPayment.amount);\n        setNumber(data.numPayments);\n        i++;\n        setIndex(i);\n      })\n      .finally(() => setLoading(false));\n  };\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setState({ [side]: open });\n  };\n\n  const handleHistoryClicked = event => {\n    const { amount, months } = JSON.parse(localStorage.getItem(event.currentTarget.getAttribute('value')));\n    setValidity(true);\n    setAmount(amount);\n    setMonth(months);\n    getData(amount, months);\n  }\n\n  const checkValid = (type, value) => {\n    switch (type) {\n      case \"amount\":\n        value >= 500 && value <= 5000 ? setValidity(true) : setValidity(false);\n        break;\n      case \"month\":\n        value >= 6 && value <= 24 ? setValidity(true) : setValidity(false);\n        break;\n      default:\n    }\n  }\n\n  const sideList = side => (\n    <div\n      className={classes.list}\n      onClick={toggleDrawer(side, false)}\n      onKeyDown={toggleDrawer(side, false)}\n    >\n      <List>\n        <ListSubheader component=\"div\" id=\"header\">\n          <ListItem>\n            <ListItemText \n            className={classes.listPadding}\n            primary=\"Amount\" />\n            <ListItemText primary=\"Duration\" />\n            <Divider />\n            <Divider />\n          </ListItem>\n        </ListSubheader>\n        {(Object.keys(localStorage).sort((a, b) => b - a)).map((key, index) => {\n          const { amount, months } = JSON.parse(localStorage.getItem(key));\n          return (<div key={index}>\n            <ListItem button\n              value={key}\n              onClick={handleHistoryClicked}>\n              <ListItemText primary={key} />\n              <ListItemText primary={amount} />\n              <ListItemText primary={months} />\n            </ListItem>\n            <Divider />\n          </div>\n          )\n        })}\n      </List>\n    </div>\n  );\n\n  return (\n    <React.Fragment>\n      <Grid container\n        spacing={3}\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n        style={{ minHeight: '100vh' }}>\n        <Button onClick={toggleDrawer('left', true)}>Open History</Button>\n        <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\n          {sideList('left')}\n        </Drawer>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>\n            <div className={classes.width}>\n              <TextField\n                getValue={getAmount}\n                value={amount}\n                type='amount'\n                disabled={false}\n                label={\"Amount\"}\n                isValid={isValid}\n              />\n              <Slider\n                getValue={getAmount}\n                value={amount}\n                max={5000}\n                min={500}\n              />\n            </div>\n            <div>\n              <TextField\n                getValue={getMonths}\n                value={months}\n                type='month'\n                disabled={false}\n                label='Months'\n                isValid={isValid}\n              />\n              <Slider\n                getValue={getMonths}\n                value={months}\n                max={24}\n                min={6}\n              />\n            </div>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>\n            <TextField\n              type=\"interest\"\n              label=\"Interest Rate\"\n              value={interestRate}\n              disabled={true}\n            />\n            <TextField\n              type=\"monthly_payment\"\n              label=\"Monthly Payment\"\n              value={monthlyInstallment}\n              disabled={true}\n            />\n            <TextField\n              type=\"payments\"\n              label=\"Number of Payments\"\n              value={numofPayments}\n              disabled={true}\n            />\n          </Paper>\n          {isLoading ? <LinearProgress color=\"secondary\" /> : \"\"}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}